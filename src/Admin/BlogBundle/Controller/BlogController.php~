<?php
namespace Admin\BlogBundle\Controller;

use Admin\BlogBundle\Entity\Blog;
use Admin\BlogBundle\Form\BlogType;
use Symfony\Component\Form\FormView;
use Symfony\Component\Form\FileField;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\File\UploadedFile;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;

class BlogController extends Controller {
    /**
     * @Route("/", name="admin_blog_home")
     * @Template()
     */
    public function indexAction() {
        $em = $this->getDoctrine()->getManager();
        $entities = $em->getRepository('AdminBlogBundle:Blog')->findAll();
        return $this->render('AdminBlogBundle:Blog:index.html.twig', array('entities' => $entities,));
    }
    /**
     * @Route("/new/", name="admin_blog_add")
     * @Template()
     */
    public function addAction(Request $request) {
        $entity = new blog();
        $form = $this->createCreateForm($entity);
        $form->handleRequest($request);
        $date = date('Y-m-d H:i:s');
        $status = 'success';
        $uploadedURL = '';
        $message = '';

        $Image = $this->get('request')->files->get('image');

        if ($request->isMethod('POST')) {

            if (($Image instanceof UploadedFile) && ($Image->getError() == '0')) {
                if (($Image->getSize() < 2000000000)) {
                    $originalName = $Image->getClientOriginalName();
                    $name_array = explode('.', $originalName);
                    $file_type = $name_array[sizeof($name_array) - 1];
                    $valid_filetypes = array('jpg', 'jpeg', 'bmp', 'png');
                    if (in_array(strtolower($file_type), $valid_filetypes)) {
                        //Start Uploading File

                        $document = new Document();
                        $document->setFile($Image);
                        $document->setSubDirectory('uploads');
                        $document->processFile();
                        $uploadedURL=$uploadedURL = $document->getUploadDirectory() . DIRECTORY_SEPARATOR . $document->getSubDirectory() . DIRECTORY_SEPARATOR . $image->getBasename();

                    } else {
                        $status = 'failed';
                        $message = 'Size exceeds limit';
                    }
                } else {
                    $status = 'failed';
                    $message = 'Size exceeds limit';
                }
            } else {
                $status = 'failed';
                $message = 'File Error';
            }

            echo $message;
            die();

            $title = $this->get('request')->request->get('title');
            $entity->setTitle($request->request->get('title'));
            $entity->setCategory($request->request->get('category'));
            $entity->setAuthor($request->request->get('author'));
            $entity->setSlug(preg_replace('/[^A-Za-z0-9-]+/', '-', $title));
            $entity->setShort($request->request->get('short'));
            $entity->setImage('logo.png');
            $entity->setDetail($request->request->get('detail'));
            $entity->setStatus($request->request->get('status'));
            $entity->setAdded($date);
            $entity->setUpdated('0000-00-00 00:00:00');
            $em = $this->getDoctrine()->getManager();
            $em->persist($entity);
            $em->flush();
            $this->redirect($this->generateUrl('admin_blog_home', array('Success' => 'Blog Added Successfully.')));
        }

        return $this->render('AdminBlogBundle:Blog:add.html.twig', array('form' => $form->createView()));
    }
    private function createCreateForm(blog $entity) {
        $form = $this->createForm(new BlogType(), $entity, array('action' => $this->generateUrl('admin_blog_add'), 'method' => 'POST',));

        $form->add('submit', 'submit', array('label' => 'Create', 'attr' => array('class' => 'btn btn-info')));

        return $form;
    }
}
